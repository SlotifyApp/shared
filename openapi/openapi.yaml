openapi: "3.0.0"
info:
  title: Slotify API
  version: "1.0.0"
  description: API to communicate and schedule meetings with Microsoft.

paths:
  /api/calendar/me:
    get:
      operationId: GetAPICalendarMe
      summary: get a user's calendar events
      responses:
        "200":
          description: Successfully got user calendar events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CalendarEvent"
        "400":
          description: Bad request
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "500":
          description: Something went wrong internally
          content:
            application/json:
              schema:
                type: string

  /api/refresh:
    post:
      operationId: PostAPIRefresh
      summary: Refresh Slotify access token and refresh token
      responses:
        "201":
          description: Successfully refreshed access token
          content:
            application/json:
              schema:
                type: string
        "401":
          $ref: "#/components/responses/UnauthorizedError"

  /api/auth/callback:
    get:
      operationId: GetAPIAuthCallback
      summary: Auth route for authorisation code flow
      parameters:
        - in: query
          name: code
          schema:
            type: string
          required: true
        - in: query
          name: state
          schema:
            type: string
          required: true
      responses:
        "302":
          description: Successful auth
          headers:
            Location:
              description: The URL to redirect to after successful authentication
              schema:
                type: string
                example: "http://localhost:3000/dashboard"
  /api/healthcheck:
    get:
      operationId: GetAPIHealthcheck
      summary: Healthcheck route
      responses:
        "200":
          description: Healthcheck successful
          content:
            application/json:
              schema:
                type: string

  /api/users/me/logout:
    post:
      operationId: PostAPIUsersMeLogout
      summary: Logout user
      responses:
        "200":
          description: Successfully logged out on backend
          content:
            application/json:
              schema:
                type: string
  /api/users/me:
    get:
      operationId: GetAPIUsersMe
      summary: Get the user by id passed by JWT
      responses:
        "200":
          description: Got user successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request (e.g., invalid team ID)
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: User not found
  /api/users:
    get:
      operationId: GetAPIUsers
      summary: Get a user by query params
      parameters:
        - in: query
          name: email
          schema:
            type: string
            format: email
          description: Email of user
        - in: query
          name: firstName
          schema:
            type: string
          description: First name of user
        - in: query
          name: lastName
          schema:
            type: string
          description: Last name of user
      responses:
        "200":
          description: Users matching the query parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Bad request (e.g., invalid team ID)
    post:
      operationId: PostAPIUsers
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request (e.g., invalid team ID)

  /api/users/{userID}:
    get:
      operationId: GetAPIUsersUserID
      summary: Get a user by id
      parameters:
        - in: path
          name: userID
          schema:
            type: integer
            format: uint32
          required: true
          description: Numeric ID of the user to get
      responses:
        "200":
          description: Got user successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request (e.g., invalid team ID)
        "404":
          description: User not found
    delete:
      operationId: DeleteAPIUsersUserID
      summary: Delete a user by id
      parameters:
        - in: path
          name: userID
          schema:
            type: integer
            format: uint32
          required: true
          description: Numeric ID of the user to delete
      responses:
        "200":
          description: Deleted user successfully
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request (e.g., invalid user ID)
        "404":
          description: User not found

  /api/teams/me:
    get:
      operationId: GetAPITeamsMe
      summary: Get all teams for user by id passed by JWT
      responses:
        "200":
          description: Got all user's teams successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
        "400":
          description: Bad request
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "404":
          description: User not found

  /api/teams:
    get:
      operationId: GetAPITeams
      summary: Get a team by query params
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Team name
      responses:
        "200":
          description: Teams matching the query parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"

        "400":
          description: Bad request (e.g., invalid team name)

    post:
      operationId: PostAPITeams
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreate"
      responses:
        "201":
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad request (e.g., invalid team name)
          content:
            application/json:
              schema:
                type: string

  /api/teams/{teamID}:
    delete:
      operationId: DeleteAPITeamsTeamID
      summary: Delete a team by id
      parameters:
        - in: path
          name: teamID
          schema:
            type: integer
            format: uint32
          required: true
          description: Numeric ID of the team to delete
      responses:
        "200":
          description: Deleted team successfully
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request (e.g., invalid team id)
        "404":
          description: Team not found
    get:
      operationId: GetAPITeamsTeamID
      summary: Get a team by id
      parameters:
        - in: path
          name: teamID
          schema:
            type: integer
            format: uint32
          required: true
          description: Numeric ID of the team to get
      responses:
        "200":
          description: Got team successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: Team not found
        "500":
          description: Something went wrong internally

  /api/teams/{teamID}/users:
    get:
      summary: Get all members of a team
      operationId: GetAPITeamsTeamIDUsers
      parameters:
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
            format: uint32
          description: ID of the team
      responses:
        "200":
          description: Users successfully found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "403":
          description: Bad request, team id is invalid
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Something went wrong
          content:
            application/json:
              schema:
                type: string

  /api/teams/{teamID}/users/{userID}:
    post:
      operationId: PostAPITeamsTeamIDUsersUserID
      summary: Add a user to a team
      parameters:
        - in: path
          name: userID
          required: true
          schema:
            type: integer
            format: uint32
          description: ID of the user
        - in: path
          name: teamID
          required: true
          schema:
            type: integer
            format: uint32
          description: ID of the team
      responses:
        "200":
          description: User successfully added to the team
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request
        "403":
          description: User or team not found

  /api/algo:
    get:
      operationID: GetAPIAlgo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreate"
      responses:
        "201":
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          description: Bad request (e.g., invalid team name)
          content:
            application/json:
              schema:
                type: string
  
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    CalendarEvent:
      type: object
      properties:
        subject:
          type: string
        startTime:
          type: string
        endTime:
          type: string
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
      required:
        - email
        - firstName
        - lastName

    User:
      type: object
      properties:
        id:
          type: integer
          format: uint32
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
      required:
        - id
        - email
        - firstName
        - lastName

    TeamCreate:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Team:
      type: object
      properties:
        id:
          type: integer
          format: uint32
        name:
          type: string
      required:
        - id
        - name
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
